const path = require('path'); // Pfad-Modul für die Pfadauflösung
const express = require('express')
const exphbs = require('express-handlebars'); // Express-Handlebars importieren
const { Server } = require('socket.io'); // Socket.IO importieren
// const { start } = require('repl');
const app = express()
const port = 80 // Port für den Server

function startServer() {// Server starten
app.listen(port, () => {
    console.log(`Server läuft auf http://localhost:${port}`);
});
}

function setupViewEngine() { // View-Engine einrichten
    // Dies weist Express an, statische Dateien aus dem 'public'-Verzeichnis zu servieren.
// Wenn du z.B. '/css/style.css' anfragst, sucht Express in 'public/css/style.css'.
app.use(express.static(path.join(__dirname, 'public')));

// Handlebars-Engine konfigurieren
app.engine('handlebars', exphbs.engine({
    defaultLayout: 'main', // Definiert ein Standard-Layout (wird später erstellt)
    layoutsDir: path.join(__dirname, 'views/layouts') // Pfad zu den Layouts
}));

app.set('view engine', 'handlebars'); // Handlebars als View Engine festlegen
app.set('views', path.join(__dirname, 'views')); // Pfad zu den Views (Templates)

// Route für die Startseite
app.get('/', (req, res) => {
    // Daten, die an das Template übergeben werden
    res.render('chat', {
       title: 'Espas Chat (◕‿◕✿)',
    });
});
}

function setupSocketIO() { 
    const server = http.createServer(app);
    const io = new Server(server);
    
    app.use(express.static(path.join(__dirname, "public")));
 
    io.on("connection", (socket) => {
    console.log("Ein Client ist verbunden:", socket.id);
 
    socket.on("nachricht", (text) => {
    console.log("Empfangen:", text);
    io.emit("nachricht", text); // an alle Clients senden
    });
 
    socket.on("disconnect", () => {
    console.log("Client getrennt:", socket.id);
    });
    });
 
    server.listen(3000, () => {
    console.log("Server läuft auf http://localhost:3000");
});
}


// ------Main--------

//initialisieren
setupViewEngine(); // View-Engine einrichten
startServer(); // WebServer starten
setupSocketIO(); // Socket.IO einrichten

